name: TRAVELMATE-CICD

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

# Env
env:
  DOCKER_IMAGE: ghcr.io/travelmate-ajou-univ/backend
  DOCKER_CONTAINER: nest-server

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Nodejs 18
        uses: actions/setup-node@v3
        with:
          node-version: 18.15.0
          cache: 'npm'

      - run: npm install
      - run: npm run test

  # Config : Build & Push to GHCR Docker Image
  build:
    needs: test
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        user: ['YuuuJeong']
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Set up Docker build
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ matrix.user }}
          password: ${{ secrets.ACCESS_TOKEN }}

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

  # # Config : Deploy To Cloud Server
  # deploy:
  #   needs: build
  #   runs-on: [self-hosted, blk]
  #   steps:
  #     - name: Login to ghcr
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.ACCESS_TOKEN }}
  #     # Docker Start! (Del Current Container & Image)
  #     - name: Running Docker
  #       run: |
  #         echo "SERVER_PORT=${{ secrets.SERVER_PORT }}" >> .env
  #         cat .env
  #         docker stop ${{ env.DOCKER_CONTAINER }} && docker rm ${{ env.DOCKER_CONTAINER }} && docker rmi ${{ env.DOCKER_IMAGE }}:latest
  #         docker run --env-file ./.env -d -p 80:8080 --name ${{ env.DOCKER_CONTAINER }} --restart always ${{ env.DOCKER_IMAGE }}:latest
