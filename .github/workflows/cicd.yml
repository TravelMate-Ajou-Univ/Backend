name: TRAVELMATE-CICD

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

# Env
env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE_PATH }}
  DOCKER_CONTAINER: nest-server

jobs:
  job_install_dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout current commit (${{ github.sha }})
        uses: actions/checkout@v3
      - name: Nodejs 18
        uses: actions/setup-node@v3
        with:
          node-version: 18.15.0
          cache: 'npm'
      - name: Cache Node.js dependencies
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Create .env file
        run: |
          echo "SWAGGER_PASSWORD=${{ secrets.SWAGGER_PASSWORD}}" > .env
          echo "SWAGGER_USER=${{ secrets.SWAGGER_USER }}" >> .env
          echo "SERVER_PORT=${{ secrets.SERVER_PORT }}" >> .env
          echo "MONGODB_URI=${{ secrets.MONGODB_URI}}" >> .env
          echo "MONGODB_NAME=${{ secrets.MONGODB_NAME}}" >> .env
      - name: Verify .env file
        run: cat .env

      - name: Set up Docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: YuuuJeong
          password: ${{ secrets.ACCESS_TOKEN }}

      - name: Build and Push Docker image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

      - name: Display Docker image details
        run: |
          echo "Docker image pushed: ${{ steps.docker_build.outputs.images }}"

  deploy:
    needs: job_install_dependencies
    runs-on: self-hosted
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: YuuuJeong
          password: ${{ secrets.ACCESS_TOKEN }}

      - name: Stop and clean up existing Docker container and image
        run: |
          docker stop ${{ env.DOCKER_CONTAINER }} && docker rm ${{ env.DOCKER_CONTAINER }} && docker rmi ${{ env.DOCKER_IMAGE }}:latest

      - name: Pull Docker image
        run: |
          docker pull ${{ env.DOCKER_IMAGE }}:latest

      - name: Running Docker
        run: |
          docker run -d -p 8080:8080 --name ${{ env.DOCKER_CONTAINER }} --restart always ${{ env.DOCKER_IMAGE }}:latest
