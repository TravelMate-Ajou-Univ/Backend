generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Visibility {
  PRIVATE
  FRIENDS_ONLY
  PUBLIC
}

model Location {
  id        Int     @id @default(autoincrement())
  latitude  Decimal @db.Decimal(65, 30)
  longitude Decimal @db.Decimal(65, 30)

  bookmarks Bookmark[]

  @@unique([latitude, longitude])
}

model Bookmark {
  id                            Int                             @id @default(autoincrement())
  content                       String?                         @db.VarChar(200)
  locationId                    Int
  userId                        Int
  createdAt                     DateTime                        @default(now()) @db.Timestamp(0)
  deletedAt                     DateTime?                       @db.Timestamp(0)
  location                      Location                        @relation(fields: [locationId], references: [id])
  user                          User                            @relation(fields: [userId], references: [id])
  BookmarkBookmarkCollectionMap BookmarkBookmarkCollectionMap[]
}

model BookmarkBookmarkCollectionMap {
  id           Int                @id @default(autoincrement())
  collectionId Int
  bookmarkId   Int
  collection   BookmarkCollection @relation(fields: [collectionId], references: [id])
  bookmark     Bookmark           @relation(fields: [bookmarkId], references: [id])

  @@unique([collectionId, bookmarkId])
  @@index([collectionId], map: "BookmarksInCollection.fk_collectionId_idx")
  @@index([bookmarkId], map: "BookmarksInCollection.fk_bookmarkId_idx")
}

model BookmarkCollection {
  id         Int        @id @default(autoincrement())
  title      String     @db.VarChar(200)
  userId     Int
  visibility Visibility @default(PRIVATE)
  createdAt  DateTime   @default(now()) @db.Timestamp(0)
  updatedAt  DateTime   @default(now()) @updatedAt @db.Timestamp(0)

  user                          User                            @relation(fields: [userId], references: [id])
  BookmarkBookmarkCollectionMap BookmarkBookmarkCollectionMap[]

  @@index([userId], map: "fk_BookmarkCollection_userId")
}

model User {
  id         Int      @id @default(autoincrement())
  nickname   String?
  provider   String
  providerId String   @unique
  createdAt  DateTime @default(now()) @db.Timestamp(0)
  updatedAt  DateTime @default(now()) @updatedAt @db.Timestamp(0)

  bookmarkCollections BookmarkCollection[]
  Bookmark            Bookmark[]
}
